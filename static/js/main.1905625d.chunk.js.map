{"version":3,"sources":["images/search-icon.png","images/close-icon.png","constants.js","reducers/index.js","reducers/calendar.js","reducers/modal.js","reducers/events.js","store/configureStore.js","actions/calendar.js","actions/addEventModal.js","components/Header.js","actions/events.js","components/DayItem.js","components/AddEventModal.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CALENDAR","SET_MONTH","SET_SELECTED_DATE","WEEK_DEYS_TITLES","MONTHS","MODAL","EVENTS","combineReducers","calendarReducer","state","arguments","length","undefined","action","type","Object","objectSpread","selectedDate","payload","monthData","modalReducer","isOpenAddEventModal","eventsReducer","eventsList","configureStore","initialState","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","setSelectedDate","setMonth","date","Date","month","tempArr","firstDay","getFullYear","getMonth","getDay","lastDay","getDate","prevMonthDaysCount","getYear","push","i","counter","slice","items","title","showAddEventModal","closeAddEventModal","debounce","require","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlerSearchInput","_ref","searchValue","target","value","setState","searchInCalendar","test","props","setHours","entries","map","_ref2","_ref3","slicedToArray","eventData","eventName","includes","eventInvited","Number","_this2","_this$props","debouncedSearchInCalendar","react_default","a","createElement","className","onClick","src","searchIcon","width","height","alt","onChange","event","placeholder","Component","connect","dispatch","addEventModalActions","calendarActions","newDate","setEventsList","getEventsList","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","stop","_x","apply","modalActions","rowIndex","weekIndex","onDoubleClick","style","backgroundColor","react","AddEventModal","eventDate","eventDescription","defineProperty","name","_this$state","addEvent","removeEvent","newEvent","closeIcon","e","handlerInputChage","required","preventDefault","newEventsList","eventsActions","Calendar","components_AddEventModal","concat","week","key","day","components_DayItem","App","components_Header","components_Calendar","Boolean","location","hostname","match","store","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1905625d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-icon.0f7ddc24.png\";","module.exports = __webpack_public_path__ + \"static/media/close-icon.51d8afab.png\";","\r\nexport const CALENDAR = {\r\n  SET_MONTH: 'SET_MONTH',\r\n  SET_SELECTED_DATE: 'SET_SELECTED_DATE',\r\n  WEEK_DEYS_TITLES: [\r\n    \"понедельник\", \r\n    \"вторник\", \r\n    \"среда\", \r\n    \"четверг\", \r\n    \"пятница\", \r\n    \"суббота\", \r\n    \"воскресенье\"\r\n  ],\r\n  MONTHS: [\r\n    'Январь',\r\n    'Февраль',\r\n    'Март',\r\n    'Апрель',\r\n    'Май',\r\n    'Июнь',\r\n    'Июль',\r\n    'Август',\r\n    'Сентябрь',\r\n    'Октябрь',\r\n    'Ноябрь',\r\n    'Декабрь',\r\n ],\r\n\r\n}\r\n\r\nexport const MODAL = {\r\n  SHOW_ADD_EVENT_MODAL: 'SHOW_ADD_EVENT_MODAL',\r\n  CLOSE_ADD_EVENT_MODAL: 'CLOSE_ADD_EVENT_MODAL' \r\n}\r\n\r\nexport const EVENTS = {\r\n  SET_EVENTS_LIST: 'SET_EVENTS_LIST',\r\n  ADD_EVENT: 'ADD_EVENT',\r\n  REMOVE_EVENT: 'REMOVE_EVENT'\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport { calendarReducer } from './calendar'\r\nimport { modalReducer } from './modal'\r\nimport { eventsReducer } from './events'\r\n\r\nexport default combineReducers({\r\n  calendarReducer,\r\n  modalReducer,\r\n  eventsReducer\r\n})","import { CALENDAR } from '../constants'\r\n\r\nexport const calendarReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case CALENDAR.SET_SELECTED_DATE:\r\n      return { ...state, selectedDate: action.payload }\r\n    case CALENDAR.SET_MONTH: {\r\n      return { ...state, monthData: action.payload}\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { MODAL } from '../constants'\r\n\r\nexport const modalReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case MODAL.SHOW_ADD_EVENT_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpenAddEventModal: action.payload\r\n      }\r\n    case MODAL.CLOSE_ADD_EVENT_MODAL:\r\n      return {\r\n      ...state,\r\n      isOpenAddEventModal: action.payload\r\n    }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}","import { EVENTS } from '../constants'\r\n\r\nexport const eventsReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case EVENTS.SET_EVENTS_LIST:\r\n      return { ...state, eventsList: action.payload}\r\n\r\n    default:\r\n      return state  \r\n  }\r\n} ","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from '../reducers/index.js'\r\n\r\nconst configureStore = (initialState) => {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  )\r\n}\r\n\r\nexport default configureStore","\r\nimport { CALENDAR } from '../constants'\r\n\r\nexport const setSelectedDate = (selectedDate) => ({\r\n  type: CALENDAR.SET_SELECTED_DATE,\r\n  payload: selectedDate\r\n})\r\n\r\nexport const setMonth = (date = new Date()) => {\r\n  let month = []\r\n  let tempArr = []\r\n  let firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\r\n  let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n\r\n  let prevMonthDaysCount = new Date(date.getYear(), date.getMonth(), 0).getDate() - (firstDay - 1);\r\n  while(tempArr.length <= firstDay - 1) {\r\n    tempArr.push(new Date(date.getFullYear(), date.getMonth()-1, prevMonthDaysCount)) \r\n    prevMonthDaysCount++\r\n  }\r\n\r\n  for (let i = 1; i <= lastDay; i++) {\r\n    tempArr.push(new Date(date.getFullYear(), date.getMonth(), i))\r\n  }\r\n \r\n  let counter = 1\r\n  \r\n  while (tempArr.length % 7 !== 0) {\r\n    tempArr.push(new Date(date.getFullYear(), date.getMonth() + 1, counter))\r\n    counter++\r\n  } \r\n\r\n  for (let i = 0; i < tempArr.length/7; i++) {\r\n    month.push(tempArr.slice(i * 7, (i * 7) + 7))\r\n  }\r\n\r\n  return ({\r\n    type: CALENDAR.SET_MONTH,\r\n    payload: {\r\n      items: month,\r\n      title: CALENDAR.MONTHS[date.getMonth()],\r\n      date: date\r\n    }\r\n  })\r\n}\r\n","import { MODAL } from '../constants'\r\n\r\nexport const showAddEventModal = () => ({\r\n  type: MODAL.SHOW_ADD_EVENT_MODAL,\r\n  payload: true \r\n})\r\n\r\nexport const closeAddEventModal = () => ({\r\n  type: MODAL.CLOSE_ADD_EVENT_MODAL,\r\n  payload: false \r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as calendarActions from '../actions/calendar'\r\nimport * as addEventModalActions from '../actions/addEventModal'\r\nimport searchIcon from '../images/search-icon.png'\r\nvar debounce = require('lodash.debounce')\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      searchValue: ''\r\n    }\r\n  }\r\n\r\n  handlerSearchInput = ({target}) => {\r\n    const searchValue = target.value\r\n\r\n    this.setState({\r\n      searchValue \r\n    })\r\n  }\r\n\r\n  searchInCalendar = (eventsList) => {\r\n    let searchValue = this.state.searchValue\r\n    let dateReg = /^\\d{4}[./-]\\d{2}[./-]\\d{2}$/\r\n\r\n    if (new Date(searchValue) !== 'Invalid date' && dateReg.test(searchValue)) {\r\n      this.props.setMonth(new Date(searchValue))\r\n      this.props.setSelectedDate(new Date(searchValue).setHours(0,0,0,0))\r\n    }\r\n\r\n    Object.entries(eventsList).map(([date, eventData]) => {\r\n      if (searchValue && (eventData.eventName.includes(searchValue) || eventData.eventInvited.includes(searchValue))) {\r\n        this.props.setMonth(new Date(Number(date)))\r\n        this.props.setSelectedDate(new Date(Number(date)).setHours(0,0,0,0))       \r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { showAddEventModal, setSelectedDate, eventsList } = this.props\r\n    \r\n    let debouncedSearchInCalendar = debounce( this.searchInCalendar , 500)\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"header__buttons-menu\">\r\n          <button className=\"header__button\" onClick={() => {\r\n            setSelectedDate(null)\r\n            showAddEventModal()\r\n          }}\r\n          >\r\n            Добавить\r\n          </button>\r\n          <button className=\"header__button\"\r\n            onClick={() => setSelectedDate(null)}\r\n          >Обновить</button>\r\n        </div>\r\n        <div className=\"header__search-menu\">\r\n          <img src={searchIcon}  width=\"35\" height=\"35\" alt=\"search icon\"/>\r\n          <input \r\n            type=\"text\" \r\n            onChange={(event) => {\r\n              this.handlerSearchInput(event)\r\n              debouncedSearchInCalendar(eventsList)\r\n            }}\r\n            placeholder=\"Событие, дата(год-мес-день) или участник\" \r\n          />\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n} \r\n\r\nconst mapStateToProps = (state) => {\r\n  const eventsList = state.eventsReducer.eventsList\r\n\r\n  return {\r\n    eventsList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  showAddEventModal: () => dispatch(addEventModalActions.showAddEventModal()),\r\n  setSelectedDate: (selectedDate) => dispatch(calendarActions.setSelectedDate(selectedDate)),\r\n  setMonth: (newDate) => dispatch(calendarActions.setMonth(newDate))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);","import { EVENTS } from '../constants'\r\n\r\nexport const setEventsList = (eventsList) => ({\r\n  type: EVENTS.SET_EVENTS_LIST,\r\n  payload: eventsList\r\n})\r\n\r\nexport const getEventsList = async (dispatch) => {\r\n  const res = await fetch('events.json');\r\n  const eventsList = await res.json();\r\n\r\n  dispatch(setEventsList(eventsList))\r\n}\r\n\r\nexport const addEvent = (dispatch, newEvent, eventsList) => {\r\n  const newEventsList = { ...eventsList, ...newEvent }\r\n\r\n  dispatch(setEventsList(newEventsList))\r\n}\r\n\r\nexport const removeEvent = (dispatch, event, eventsList) => {\r\n  delete eventsList[event]\r\n\r\n  dispatch(setEventsList(eventsList))\r\n}","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as calendarActions from '../actions/calendar'\r\nimport * as modalActions from '../actions/addEventModal'\r\nimport { CALENDAR } from '../constants'\r\n\r\nconst DayItem = ({rowIndex, weekIndex, date, event, selectedDate, setSelectedDate, showAddEventModal}) => (\r\n  <td \r\n    className={date.setHours(0,0,0,0) === selectedDate ? 'calendar__day selected' : 'calendar__day'} \r\n    onClick={() => setSelectedDate(date.setHours(0,0,0,0))}\r\n    onDoubleClick={() => showAddEventModal()}\r\n    style={\r\n      new Date().setHours(0,0,0,0) === date.setHours(0,0,0,0) \r\n      ? {'backgroundColor': '#F4F4F4'} \r\n      : event \r\n      ? {'backgroundColor': 'rgba(0, 153, 255, 0.5)'} \r\n      : {} \r\n    }>\r\n    { \r\n      rowIndex === 0 && date === '' \r\n      ? CALENDAR.WEEK_DEYS_TITLES[weekIndex]\r\n      : rowIndex === 0 \r\n      ? <Fragment>{CALENDAR.WEEK_DEYS_TITLES[weekIndex]}, {date.getDate()}</Fragment> \r\n      : date.getDate()\r\n    }\r\n    {\r\n      event \r\n      ? <p>{event.eventName}</p>\r\n      : ''\r\n    }\r\n    <br />\r\n  </td>\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n  const selectedDate = state.calendarReducer.selectedDate \r\n  const monthData = state.calendarReducer.monthData\r\n  return {\r\n    selectedDate,\r\n    monthData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedDate:(selectedDate) => dispatch(calendarActions.setSelectedDate(selectedDate)),\r\n  showAddEventModal: () => dispatch(modalActions.showAddEventModal())\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DayItem);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as addEventModalActions from '../actions/addEventModal'\r\nimport * as eventsActions from '../actions/events'\r\nimport * as calendarActions from '../actions/calendar'\r\n\r\nimport closeIcon from '../images/close-icon.png'\r\n\r\nclass AddEventModal extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      eventName: '',\r\n      eventDate: '',\r\n      eventInvited: '',\r\n      eventDescription: ''\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.eventsList[this.props.selectedDate]) {\r\n      this.setState({\r\n        ...this.props.eventsList[this.props.selectedDate]\r\n      })\r\n    }\r\n  }\r\n\r\n  handlerInputChage({target}) {\r\n    this.setState({\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { eventName, eventDate, eventInvited, eventDescription } = this.state\r\n    const { closeAddEventModal, addEvent, setMonth, setSelectedDate, removeEvent, eventsList } = this.props\r\n    const selectedDate =  eventDate ? new Date(eventDate).setHours(0,0,0,0)  : this.props.selectedDate \r\n    const newEvent = { \r\n      [selectedDate] : { \r\n        ...this.state \r\n      } \r\n    }\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <img className=\"modal__close-icon\" src={closeIcon} onClick={() => closeAddEventModal()} alt=\"close icon\"/>\r\n        <form className=\"modal__form\"> \r\n          <input type=\"text\" onChange={(e) => this.handlerInputChage(e)} value={eventName} name=\"eventName\" placeholder=\"Событие\" required />\r\n          <input type=\"date\" onChange={(e) => this.handlerInputChage(e)} value={eventDate} name=\"eventDate\" placeholder=\"День, месяц, год\" />\r\n          <input type=\"text\" onChange={(e) => this.handlerInputChage(e)} value={eventInvited} name=\"eventInvited\" placeholder=\"Имена участников\" />\r\n          <textarea onChange={(e) => this.handlerInputChage(e)} value={eventDescription} name=\"eventDescription\" placeholder=\"Описание\"></textarea>\r\n          <div className=\"modal__buttons\">\r\n            <button onClick={async (event) => {\r\n                setMonth(new Date(selectedDate))\r\n                setSelectedDate(selectedDate)\r\n                addEvent(newEvent, eventsList)\r\n                closeAddEventModal()\r\n                event.preventDefault()\r\n              }\r\n            }>Готово</button>\r\n            <button onClick={() => {\r\n              removeEvent(selectedDate, eventsList)\r\n              closeAddEventModal()\r\n            }}>Удалить</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const eventsList = state.eventsReducer.eventsList\r\n  const selectedDate = state.calendarReducer.selectedDate\r\n\r\n  return {\r\n    eventsList,\r\n    selectedDate\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  closeAddEventModal: () => dispatch(addEventModalActions.closeAddEventModal()),\r\n  addEvent: (newEvent, eventsList) => eventsActions.addEvent(dispatch, newEvent, eventsList),\r\n  removeEvent: (event, eventsList) => eventsActions.removeEvent(dispatch, event, eventsList),\r\n  setMonth: (newDate) => dispatch(calendarActions.setMonth(newDate)),\r\n  setSelectedDate: (selectedDate) => dispatch(calendarActions.setSelectedDate(selectedDate)) \r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n  )(AddEventModal)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as calendarActions from '../actions/calendar'\r\nimport * as addEventModalActions from '../actions/addEventModal'\r\nimport * as eventsActions from '../actions/events'\r\n\r\nimport DayItem from './DayItem'\r\nimport AddEventModal from './AddEventModal'\r\n\r\nclass Calendar extends Component {\r\n  componentDidMount() {\r\n    this.props.getEventsList()\r\n    this.props.setMonth() \r\n  }\r\n\r\n  render() {\r\n    const {  monthData, setMonth, setSelectedDate, isOpenAddEventModal, eventsList} = this.props\r\n    const date =  monthData ? monthData.date : null\r\n\r\n    return (\r\n      <div className=\"calendar\">\r\n        { isOpenAddEventModal && <AddEventModal /> }\r\n        <div className=\"calendar__month-changer\">\r\n          <button className=\"calendar__button\" onClick={() => setMonth(new Date(date.setMonth(monthData.date.getMonth() - 1)))}>&#60;</button>\r\n          { monthData && `${monthData.title} ${monthData.date.getFullYear()}` }\r\n          <button className=\"calendar__button\" onClick={() => setMonth(new Date(date.setMonth(monthData.date.getMonth() + 1)))}>&#62;</button>          \r\n          <button className=\"calendar__button\" onClick={() => {\r\n            setMonth(new Date())\r\n            setSelectedDate(new Date().setHours(0,0,0,0))\r\n          }}\r\n          >\r\n            Сегодня\r\n          </button>\r\n        </div>\r\n        <table className=\"calendar__table\">\r\n        <tbody>\r\n          { monthData && monthData.items.map((week, rowIndex) => \r\n              <tr key={rowIndex} >\r\n                { week.map((day, weekIndex) => \r\n                  <DayItem \r\n                    key={weekIndex} \r\n                    date={day}\r\n                    rowIndex={rowIndex} \r\n                    weekIndex={weekIndex} \r\n                    event={ eventsList && eventsList[day.setHours(0,0,0,0)]}\r\n                  />\r\n                )}\r\n              </tr>  \r\n          ) }\r\n        </tbody>\r\n        </table>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const monthData = state.calendarReducer.monthData\r\n  const isOpenAddEventModal = state.modalReducer.isOpenAddEventModal\r\n  const eventsList = state.eventsReducer.eventsList\r\n  \r\n  return {\r\n    monthData,\r\n    isOpenAddEventModal,\r\n    eventsList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setMonth: (newDate) => dispatch(calendarActions.setMonth(newDate)),\r\n  closeAddEventModal: () => dispatch(addEventModalActions.closeAddEventModal()),\r\n  getEventsList: () => eventsActions.getEventsList(dispatch),\r\n  setSelectedDate: (selectedDate) => dispatch(calendarActions.setSelectedDate(selectedDate))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Calendar);\r\n\r\n","import React from 'react';\n\nimport Header from './components/Header'\nimport Calendar from './components/Calendar'\n\nconst App = () => (\n  <div className=\"App\">\n  <Header />\n  <Calendar />\n</div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.scss'\n\nimport configureStore from './store/configureStore'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore({})\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}